<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:help="net.systemeD.potlatch2.help.*"
        layout="vertical" showCloseButton="true"
        horizontalAlign="center" title="{getTitleText()}"
        width="660" height="500"
        verticalGap="0">
  <fx:Script><![CDATA[
    import mx.managers.PopUpManager;
    import mx.events.CloseEvent;
    import mx.core.Application;
    import mx.core.FlexGlobals;
    import net.systemeD.halcyon.Globals;

	[Bindable] private var application:Object = FlexGlobals.topLevelApplication;
	[Bindable] private var locale:String = Globals.vars.locale;

    /** Pops up a multi-tabbed help window in the middle of the screen, then remembers that the user has seen it. */
    public function init():void {
        PopUpManager.addPopUp(this, Application(application), true);
        PopUpManager.centerPopUp(this);
        this.addEventListener(CloseEvent.CLOSE, helpDialog_close);

        // store whether the user has seen the help dialog before
        var obj:SharedObject = SharedObject.getLocal("user_state");
        obj.setProperty("help_shown","true");

        buildShortCuts();

        ss.parseCSS(hoverStyles);
    }

    // Styling the text within an mx:Text can't be done with the Flex style system. Instead the flash.text styleSheet system must be used
    // and the stylesheet applied to each mx:Text that requires it after its been initialized
    private var hoverStyles:String = "a:hover { color: #0000ff; text-decoration: underline; } a { color: #0000aa; text-decoration: underline; }";
    private var ss:StyleSheet = new StyleSheet();

    // perhaps a better way would be to iterate over the TabNavigator and find all the mx:Text children.
    // If so, you need to do that after all the children have been created. For now, each Text object can call this when initialized
    private function applyTextStyle(t:Text):void {
        t.styleSheet = ss;
    }

    private function helpDialog_close(evt:CloseEvent):void {
        PopUpManager.removePopUp(this);
    }

    private function getTitleText():String {
	return "Welcome to Potlatch2 for the USGS National Map Corps";
    }

    private function getIntroText():String {
        return "<p><b>Potlatch2</b> is an OpenStreetMap (OSM) editor that allows you to make edits to the National Structure Dataset.</p>";
    }

    private function getSaveText():String {
	return "<p>If you feel confident with your edits, hit save to publish to <a href=\"http://navigator.er.usgs.gov\" target=\"_blank\">http://navigator.er.usgs.gov</a>.</p>";
    }

    private function buildGrid(text:Array):Grid {
        var grid:Grid = new Grid()
        grid.percentWidth=100;
        grid.setStyle("verticalGap",1);
        for each (var pair:Array in text) {
          var gr:GridRow = new GridRow();
          gr.percentWidth=100;
          var left:GridItem = new GridItem();
          var label:Label = new Label();
          label.styleName = "helpHeaderText";
          label.percentWidth=100;
          label.text = pair[0];
          var right:GridItem = new GridItem();
          right.percentWidth=100;
          var rtext:Text = new Text();
          rtext.condenseWhite=true;
          rtext.percentWidth=100;
          rtext.htmlText = pair[1];
          left.addChild(label);
          right.addChild(rtext);
          gr.addChild(left);
          gr.addChild(right);
          grid.addChild(gr);
        }
        return grid;
    }

    private function buildShortCuts():void {
        var text:Array = [["Click+Drag", "Drag the map to move around"],
                          ["Click+Drag at structure", "Move the structure"],
                          ["Backspace/Delete", "Delete selected structure"],
                          ];
        var text2:Array =  [
	                    ["D", "Dim features"],
                            ["M", "Maximise editor"],
                            ];
        var text3:Array =  [["S", "Save"],
                            ["Z", "Undo"],
                            ["Esc", "Cancel edit"],
                            ["Space", "Hold/drag to realign background image"]
                            ];
        shortcuts1.addChild(buildGrid(text));
        shortcuts2a.addChild(buildGrid(text2));
        shortcuts2b.addChild(buildGrid(text3));
    }

              ]]>
  </fx:Script>
  <mx:TabNavigator id="helpTN" width="100%" height="100%" styleName="helpTN" creationPolicy="all">
    <mx:VBox label="Welcome" id="welcome" width="100%" height="100%">
      <mx:Grid width="100%"><!-- prepare for a column of icons, at some point -->
        <mx:GridRow width="100%">
          <mx:GridItem width="100%">
            <mx:Text condenseWhite="true" width="100%" htmlText="{getIntroText()}" />
          </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow width="100%">
          <mx:GridItem width="100%">
            <mx:Text id="whyOpenStreetMap" condenseWhite="true" width="100%">
              <mx:htmlText>
                <![CDATA[
                  <p><b>Why OpenStreetMap?</b> OSM is a mapping service in which all data is constantly updated and edited by everyday people like you. The obvious benefit is that it's free to use, but it has also become a major player in crisis mapping (e.g. use of OSM data to coordinate earthquake relief efforts in Haiti). Accuracy of this data is critical, and we hope you are able to volunteer some of your time!</p>
                ]]>
              </mx:htmlText>
            </mx:Text>
          </mx:GridItem>
        </mx:GridRow>
      </mx:Grid>
    </mx:VBox>

    <mx:VBox id="introduction" label="Introduction" width="100%" height="100%" hide="introvideo.stopPlaying()" removedFromStage="introvideo.stopPlaying()">
		<help:VideoPlayer width="640" height="369" id="introvideo"
			file="help/introduction.mp4" 
			previewImage="help/introduction.jpg" />
	</mx:VBox>

    <mx:VBox id="Controls" label="Controls" width="100%" height="100%">
      <mx:Label id="interfaceControls" text="Interface Controls" textAlign="center" width="100%" styleName="helpPageHeader"/>
      <mx:Grid width="100%">
        <mx:GridRow width="100%">
          <mx:GridItem>
            <mx:Label id="background" width="100%" text="Background" styleName="helpHeaderText" />
          </mx:GridItem>
          <mx:GridItem width="100%">
            <mx:Text id="mapBackground" condenseWhite="true" width="100%">
              <mx:htmlText>
                <![CDATA[
                  <p>Choose your map background from one of the items in the list or add your own vector file.</p>
                ]]>
              </mx:htmlText>
            </mx:Text>
          </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow width="100%">
          <mx:GridItem>
            <mx:Label id="undoRedo" width="100%" text="Undo / Redo" styleName="helpHeaderText" />
          </mx:GridItem>
          <mx:GridItem width="100%">
            <mx:Text id="madeMistake" condenseWhite="true" width="100%">
              <mx:htmlText>
                <![CDATA[
                  <p>Made a mistake? Just hit undo and/or redo to correct your edits.</p>
                ]]>
              </mx:htmlText>
            </mx:Text>
          </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow width="100%">
          <mx:GridItem>
            <mx:Label id="help" width="100%" text="Help" styleName="helpHeaderText" />
          </mx:GridItem>
          <mx:GridItem width="100%">
            <mx:Text id="guideInfomation" condenseWhite="true" width="100%">
              <mx:htmlText>
                <![CDATA[
                  <p>Brings up this guide in case you need any information as you begin editing.</p>
                ]]>
              </mx:htmlText>
            </mx:Text>
          </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow width="100%">
          <mx:GridItem>
            <mx:Label id="save" width="100%" text="Save" styleName="helpHeaderText" />
          </mx:GridItem>
          <mx:GridItem width="100%">
            <mx:Text id="saveText" condenseWhite="true" width="100%" htmlText="{getSaveText()}" initialize="applyTextStyle(saveText)" />
          </mx:GridItem>
        </mx:GridRow>
      </mx:Grid>
    </mx:VBox>
    <mx:VBox label="Adding">
      <mx:Label id="addingFeatures" text="Adding Features" textAlign="center" width="100%" styleName="helpPageHeader" />
      <mx:Text condenseWhite="true" width="100%" id="addingFeaturesText" initialize="applyTextStyle(addingFeaturesText)">
        <mx:htmlText>
          <![CDATA[
            <p><i>Before you begin, the first rule you need to know is the use of proprietary data. Data from copyrighted maps or any other proprietary data is strictly prohibited! Copying, tracing or any reproduction of copyrighted work is not allowed! </i></p>
            <p></p>
            <p>Linear features such as streets, footpaths, railways and building outlines will hereby be referred to as <b>ways</b>.</p>
            <p>If you suddenly realize your sidebar with all the icons have gone missing, it's because you have a feature selected on the map. Simply deselect by clicking on a blank area of the map to bring up the icons again.</p>
            <p><b>To create a point (or node)</b>, just drag and drop the appropriate icon from the sidebar onto the map. See Add POIs to learn more about creating a POI (Point of Interest)</p>
            <p><b>To create a way</b>, begin by clicking on the map at its start point, then click at each successive point. Double-click to finish the line or press Enter.</p>
            <p><b>To create a polygon</b>, begin by clicking on the map at its start point, then click at each successive point (similar to creating a way), and finish by clicking on the very first point to close the polygon.</p>
            <p>Remember, if you make a mistake, you can always hit the Undo button. Pressing the Esc key will undo all your edits for the current feature.</p>
          ]]>
        </mx:htmlText>
      </mx:Text>
    </mx:VBox>
    <mx:VBox label="Shortcuts" id="shortcuts">
      <mx:Label text="Keyboard Shortcuts" textAlign="center" width="100%" styleName="helpPageHeader" id="keyboardShortcuts" />
      <mx:HBox id="shortcuts1" width="100%"/>
      <mx:HBox id="shortcuts2" width="100%">
        <mx:HBox id="shortcuts2a" width="100%" />
        <mx:HBox id="shortcuts2b" width="100%" />
      </mx:HBox>
    </mx:VBox>
  </mx:TabNavigator>

  <mx:ControlBar>
    <mx:VBox>
      <mx:Label text="Version: {application.version} Build: {application.build_number} USGS" />
      <mx:Label text="Locale: {locale}" />
    </mx:VBox>
    <mx:Spacer width="100%"/>
    <mx:Button label="Ok" click="PopUpManager.removePopUp(this);" styleName="titleWindowButton" />
  </mx:ControlBar>

</mx:TitleWindow>
